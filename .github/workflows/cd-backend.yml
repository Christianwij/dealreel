name: Backend CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/cd-backend.yml'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install -r backend/requirements-dev.txt

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dealreel_test
          REDIS_URL: redis://localhost:6379/0
        run: |
          cd backend
          pytest

      - name: Deploy to Render
        if: success() && github.ref == 'refs/heads/main'
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

      - name: Wait for deployment
        if: success() && github.ref == 'refs/heads/main'
        run: |
          # Wait for deployment to complete (Render typically takes 1-2 minutes)
          sleep 120
          
          # Check if the API is accessible
          curl --fail ${{ secrets.BACKEND_URL }}/health || exit 1

      - name: Run database migrations
        if: success() && github.ref == 'refs/heads/main'
        env:
          DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
        run: |
          cd backend
          alembic upgrade head

      - name: Notify on deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { status, conclusion } = context.job
            const state = conclusion || status
            
            const message = state === 'success'
              ? '✅ Backend deployment successful'
              : '❌ Backend deployment failed'
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            }) 